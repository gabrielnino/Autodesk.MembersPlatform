@page "/UserForm"
@page "/UserForm/{Id}"
@using Autodesk.Domain
@using System.Net.Http.Json
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager Navigation


<h3>@(isEdit ? "Editar Usuario" : "Nuevo Usuario")</h3>

<EditForm Model="user" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="name" class="form-label">Nombre</label>
        <InputText id="name" class="form-control" @bind-Value="user.Name" />
    </div>

    <div class="mb-3">
        <label for="lastname" class="form-label">Apellido</label>
        <InputText id="lastname" class="form-control" @bind-Value="user.Lastname" />
    </div>

    <div class="mb-3">
        <label for="email" class="form-label">Correo electrónico</label>
        <InputText id="email" type="email" class="form-control" @bind-Value="user.Email" />
    </div>

    <button type="submit" class="btn @(isEdit ? "btn-primary" : "btn-success")" disabled="@isSaving">
        @if(isSaving)
        {
            <span class="spinner-border spinner-border-sm me-1"></span>
        }
        else
        {
            @(isEdit ? "Update" : "Create")
        }
    </button>
    <button type="button" class="btn btn-secondary ms-2" @onclick="Cancel" disabled="@isSaving">
        Cancel
    </button>
</EditForm>

@code {
    [Parameter] public string? Id { get; set; }

    private User user = new User(Guid.NewGuid().ToString());
    private bool isEdit => !string.IsNullOrWhiteSpace(Id);
    private bool isSaving;

    protected override async Task OnInitializedAsync()
    {
        if (isEdit)
        {
            // Load existing user
            var client = HttpClientFactory.CreateClient("AutodeskApi");
            var op = await client.GetFromJsonAsync<User>($"api/v1/users/{Uri.EscapeDataString(Id!)}");
            if (op is not null)
            {
                user = op;
            }
            else
            {
                // handle 404 or error...
                Navigation.NavigateTo("/MembersList");
            }
        }
    }

    private async Task HandleValidSubmit()
    {
        isSaving = true;
        var client = HttpClientFactory.CreateClient("AutodeskApi");

        HttpResponseMessage response;
        if (isEdit)
        {
            response = await client.PutAsJsonAsync($"api/v1/users/{Uri.EscapeDataString(user.Id)}", user);
        }
        else
        {
            response = await client.PostAsJsonAsync("api/v1/users", user);
        }

        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/MembersList");
        }
        else
        {
            var msg = await response.Content.ReadAsStringAsync();
            // opcional: mostrar alerta al usuario, por ahora en consola
            Console.Error.WriteLine($"Error: {response.StatusCode} – {msg}");
            isSaving = false;
        }
    }

    private void Cancel() => Navigation.NavigateTo("/MembersList");
}
