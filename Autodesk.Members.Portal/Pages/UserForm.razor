@page "/UserForm"
@page "/UserForm/{Id}"
@using Application.Common.Pagination
@using Autodesk.Domain
@using System.Net.Http.Json
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager Navigation

<div class="card contact-card mb-4">
    <div class="row g-0">
        <div class="col-md-4 contact-info p-4">
            <h4>Contact Information</h4>
            <p>We’d love to connect—please review your information below, and we’ll notify you as soon as it’s saved correctly.</p>

            <div class="d-flex align-items-center mb-3">
                <i class="bi bi-person fs-4 me-2"></i>
                <div>
                    <strong>Your Name</strong><br />
                    @user.Name
                </div>
            </div>

            <div class="d-flex align-items-center mb-3">
                <i class="bi bi-person-badge fs-4 me-2"></i>
                <div>
                    <strong>Your Lastname</strong><br />
                    @user.Lastname
                </div>
            </div>

            <div class="d-flex align-items-center">
                <i class="bi bi-envelope fs-4 me-2"></i>
                <div>
                    <strong>Your Email</strong><br />
                    @user.Email
                </div>
            </div>
        </div>

        <div class="col-md-8 p-4">
            <EditForm Model="user" class="contact-form" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-4">
                    <label class="form-label">Your Name</label>
                    <InputText class="form-control" @bind-Value="user.Name" />
                </div>

                <div class="mb-4">
                    <label class="form-label">Your Lastname</label>
                    <InputText class="form-control" @bind-Value="user.Lastname" />
                </div>

                <div class="mb-4">
                    <label class="form-label">Your Email</label>
                    <InputText type="email" class="form-control" @bind-Value="user.Email" />
                </div>
                <hr />

                <button type="submit" class="btn btn-submit" disabled="@isSaving">
                    @if (isSaving)
                    {
                        <span class="spinner-border spinner-border-sm me-1"></span>
                        
                    }
                    else
                    {
                        @(isEditing ? "Update" : "Create")
                    }
                </button>
                <button type="button" class="btn btn-secondary ms-2" @onclick="Cancel" disabled="@isSaving">
                    Cancel
                </button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter] public string? Id { get; set; }
    private User user = new User(Guid.NewGuid().ToString());
    private bool isEditing => !string.IsNullOrWhiteSpace(Id);
    private bool isSaving;
    protected override async Task OnInitializedAsync()
    {
        if (isEditing)
        {
            // Load existing user
            var client = HttpClientFactory.CreateClient("AutodeskApi");
            var requestUri = $"api/v1/users/cursor?id={Uri.EscapeDataString(Id!)}&pageSize=20";
            var op = await client.GetFromJsonAsync<PagedResult<User>>(requestUri);
            if (op is not null)
            {
                user = op.Items.FirstOrDefault();
            }
            else
            {
                // handle 404 or error...
                Navigation.NavigateTo("/MembersList");
            }
        }
    }

    private async Task HandleValidSubmit()
    {
        isSaving = true;
        var client = HttpClientFactory.CreateClient("AutodeskApi");

        HttpResponseMessage response;
        if (isEditing)
        {
            response = await client.PutAsJsonAsync($"api/v1/users/{Uri.EscapeDataString(user.Id)}", user);
        }
        else
        {
            response = await client.PostAsJsonAsync("api/v1/users", user);
        }

        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/MembersList");
        }
        else
        {
            var msg = await response.Content.ReadAsStringAsync();
            Console.Error.WriteLine($"Error: {response.StatusCode} – {msg}");
            isSaving = false;
        }
    }
    private void Cancel() => Navigation.NavigateTo("/MembersList");
}
