@page "/reactive-user"
@inject HttpClient Http
@inject IHttpClientFactory HttpClientFactory
@using System.Text.Json
@using System.Text.Json.Serialization
@using System.Threading
<div class="members-container">
    <h3 class="mb-0 section-title">Reactive Users Download (Blazor Step-by-Step)</h3>
    <div id="controls" style="margin-bottom:1rem;">
        <p class="card-text text-truncate">Max users:</p>
        <input type="number"
               id="maxInput"
               @bind="_maxUsers"
               min="1"
               step="1"
               style="width:4rem; margin-right:1rem;" />

        <button class="btn create-btn" @onclick="StartStreaming">
            <svg width="48" height="48" viewBox="0 0 18 18" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                <path fill="#444" d="M4 0v6h1.7l0.2 0.7 0.2 0.6c0 0 0.1 0 0.1 0l1.2-0.6 1.8 1.8-0.6 1.2c0 0 0 0.1 0 0.1l0.6 0.2 0.7 0.2v0.2l6.1-3.4-12-7z"></path>
                <path fill="#444" d="M4.5 10.5c-0.2 0-0.4 0.1-0.5 0.2-0.3 0.2-0.5 0.5-0.5 0.8s0.2 0.7 0.5 0.8c0.1 0.1 0.3 0.2 0.5 0.2 0.6 0 1-0.4 1-1s-0.4-1-1-1z"></path>
                <path fill="#444" d="M9 12v-1l-1.1-0.4c-0.1-0.3-0.2-0.6-0.4-0.9l0.5-1-0.7-0.7-1 0.5c-0.3-0.2-0.6-0.3-0.9-0.4l-0.4-1.1h-1l-0.4 1.1c-0.3 0.1-0.6 0.2-0.9 0.4l-1-0.5-0.7 0.7 0.5 1.1c-0.2 0.3-0.3 0.6-0.4 0.9l-1.1 0.3v1l1.1 0.4c0.1 0.3 0.2 0.6 0.4 0.9l-0.5 1 0.7 0.7 1.1-0.5c0.3 0.2 0.6 0.3 0.9 0.4l0.3 1.1h1l0.4-1.1c0.3-0.1 0.6-0.2 0.9-0.4l1 0.5 0.7-0.7-0.5-1.1c0.2-0.3 0.3-0.6 0.4-0.9l1.1-0.3zM4.5 13.5c-1.1 0-2-0.9-2-2s0.9-2 2-2 2 0.9 2 2c0 1.1-0.9 2-2 2z"></path>
            </svg>
            <span class="visually-hidden">Start</span>
        </button>
        <button class="btn create-btn" @onclick="CancelStreaming">
            <svg viewBox="0 0 24 24"
                 version="1.1"
                 id="svg9724"
                 sodipodi:docname="cancel-circle.svg"
                 inkscape:version="1.2.2 (1:1.2.2+202212051550+b0a8486541)"
                 width="24"
                 height="24"
                 xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
                 xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
                 xmlns="http://www.w3.org/2000/svg"
                 xmlns:svg="http://www.w3.org/2000/svg">
                <defs id="defs9728" />
                <sodipodi:namedview id="namedview9726"
                                    pagecolor="#ffffff"
                                    bordercolor="#666666"
                                    borderopacity="1.0"
                                    inkscape:showpageshadow="2"
                                    inkscape:pageopacity="0.0"
                                    inkscape:pagecheckerboard="0"
                                    inkscape:deskcolor="#d1d1d1"
                                    showgrid="true"
                                    inkscape:zoom="0.42059315"
                                    inkscape:cx="139.08928"
                                    inkscape:cy="495.72847"
                                    inkscape:window-width="1920"
                                    inkscape:window-height="1009"
                                    inkscape:window-x="0"
                                    inkscape:window-y="1080"
                                    inkscape:window-maximized="1"
                                    inkscape:current-layer="g10449"
                                    showguides="true">
                    <inkscape:grid type="xygrid"
                                   id="grid9972"
                                   originx="0"
                                   originy="0" />
                </sodipodi:namedview>

                <g id="g10449"
                   transform="matrix(0.95173205,0,0,0.95115787,13.901174,12.168794)"
                   style="stroke-width:1.05103">
                    <g id="path10026"
                       inkscape:transform-center-x="-0.59233046"
                       inkscape:transform-center-y="-20.347403"
                       transform="matrix(1.3807551,0,0,1.2700888,273.60014,263.99768)" />
                    <g id="g11314"
                       transform="matrix(1.5092301,0,0,1.3955555,36.774048,-9.4503933)"
                       style="stroke-width:50.6951" />
                    <path style="color:#000000;fill:#000000;stroke-linecap:round;stroke-linejoin:round;-inkscape-stroke:none;paint-order:stroke fill markers"
                          d="m 300.60937,-12.792969 c -173.60599,0 -315.214839,141.724839 -315.214839,315.404299 0,173.67945 141.608849,315.40429 315.214839,315.40429 173.606,0 315.21485,-141.72484 315.21485,-315.40429 0,-173.67946 -141.60885,-315.404299 -315.21485,-315.404299 z m 0,84.082031 c 128.13278,10e-7 231.13086,103.052738 231.13086,231.322268 0,128.26952 -102.99808,231.32226 -231.13086,231.32226 C 172.4766,533.93359 69.476562,430.88085 69.476562,302.61133 69.476563,174.3418 172.4766,71.289062 300.60937,71.289062 Z"
                          id="path390" />
                    <path style="color:#000000;fill:#000000;stroke-linecap:round;stroke-linejoin:round;-inkscape-stroke:none"
                          d="M 416.16211,144.93164 A 42.041401,42.041401 0 0 0 386.4375,157.25391 L 155.30469,388.53125 a 42.041401,42.041401 0 0 0 0.0195,59.45703 42.041401,42.041401 0 0 0 59.45508,-0.0195 L 445.91211,216.69141 a 42.041401,42.041401 0 0 0 -0.0195,-59.45704 42.041401,42.041401 0 0 0 -29.73047,-12.30273 z"
                          id="path446" />
                    <path style="color:#000000;fill:#000000;stroke-linecap:round;stroke-linejoin:round;-inkscape-stroke:none"
                          d="m 185.05664,144.93164 a 42.041401,42.041401 0 0 0 -29.73242,12.30273 42.041401,42.041401 0 0 0 -0.0195,59.45704 L 386.4375,447.96875 a 42.041401,42.041401 0 0 0 59.45508,0.0195 42.041401,42.041401 0 0 0 0.0195,-59.45703 L 214.7793,157.25391 a 42.041401,42.041401 0 0 0 -29.72266,-12.32227 z"
                          id="path446-3" />
                </g>
            </svg>
            <span class="visually-hidden">Start</span>
        </button>
    </div>
    <div id="progress-container"
         style="width:100%; background-color:#e0e0e0; border-radius:4px; overflow:hidden; margin-bottom:1rem; height:24px;">
        <div id="progress-bar"
             style="width:@_progress%; height:100%; background-color:#4caf50; text-align:center; color:white; line-height:24px; font-size:0.9rem; transition: width 0.1s ease;">
            @_progress%
        </div>
    </div>
    <div id="results" style="max-height:300px; overflow-y:auto; border:1px solid #ccc; padding:1rem; margin-bottom:1rem;">
        @foreach (var user in _users)
        {
            <div class="user-item"
                 style="margin-bottom:0.5rem; padding:0.5rem; background:#f9f9f9; border:1px solid #ddd;">
                <h4 style="margin:0; font-size:1rem; color:#333;">
                    User @user.Index of @_maxUsers
                </h4>
                <div class="user-details"
                     style="font-size:0.9rem; margin-left:1rem;">
                    ID: @user.Id — Name: @user.Name
                </div>
            </div>
        }
    </div>
    <div id="completion-message" style="font-size:1rem; color:#006400; margin-top:1rem;">
        @_completionMessage
    </div>
    <h5 class="card-title text-truncate">Debug Output</h5>
    <div id="debug" style="max-height:200px; overflow-y:auto; border:1px dashed #666; background:#f0f0f0; padding:0.5rem; font-family:monospace; font-size:0.85rem; white-space:pre-wrap; margin-bottom:1rem;">
        @_debug
    </div>
</div>
@code {
    private int _maxUsers = 20;
    private bool _isRunning = false;
    private double _progress = 0.0;
    private string _debug = string.Empty;
    private string _completionMessage = string.Empty;
    private List<UserItem> _users = new();
    private CancellationTokenSource? _cts;

    private void LogDebug(string message)
    {
        var timestamp = DateTime.Now.ToString("HH:mm:ss");
        _debug += $"[{timestamp}] {message}\n";
        _ = InvokeAsync(StateHasChanged);
    }

    private async Task StartStreaming()
    {
        _users.Clear();
        _debug = string.Empty;
        _completionMessage = string.Empty;
        _progress = 0.0;
        _isRunning = true;
        StateHasChanged();

        LogDebug($"Starting streaming request for maxUsers={_maxUsers}...");
        _cts = new CancellationTokenSource();
        var token = _cts.Token;

        try
        {
            var client = HttpClientFactory.CreateClient("AutodeskApi");
            using var response = await client.GetAsync(
                $"api/v1/users/reactive?maxUsers={_maxUsers}",
                HttpCompletionOption.ResponseHeadersRead,
                token);

            LogDebug($"API responded with status {response.StatusCode}");
            response.EnsureSuccessStatusCode();

            await using var responseStream = await response.Content.ReadAsStreamAsync(token);
            using var reader = new StreamReader(responseStream);
            int lineNumber = 0;
            int receivedCount = 0;
            while (!reader.EndOfStream && !token.IsCancellationRequested)
            {
                var line = await reader.ReadLineAsync();
                if (string.IsNullOrWhiteSpace(line))
                    continue;

                lineNumber++;
                try
                {
                    var user = JsonSerializer.Deserialize<UserItem>(line);
                    if (user is not null)
                    {
                        _users.Add(user);
                        receivedCount++;
                        LogDebug($"Received user {receivedCount}/{_maxUsers}: ID={user.Id}, Name={user.Name} (Progress: {_progress:F2}%)");
                        StateHasChanged();
                    }
                }
                catch (JsonException je)
                {
                    StateHasChanged();
                    break;
                }
            }
        }
        catch (OperationCanceledException)
        {
            LogDebug("Streaming canceled by user.");
            _completionMessage = "Streaming canceled.";
        }
        catch (Exception ex)
        {
            LogDebug($"Stream error: {ex.Message}");
            _completionMessage = $"Error: {ex.Message}";
        }
        finally
        {
            _isRunning = false;
            await InvokeAsync(StateHasChanged);
        }
    }

    private void CancelStreaming()
    {
        if (_cts != null && !_cts.IsCancellationRequested)
        {
            LogDebug("Cancel button clicked: requesting cancellation...");
            _cts.Cancel();
        }
        _isRunning = false;
    }

    private class UserDto
    {
        [JsonPropertyName("id")]
        public string? Id { get; set; }

        [JsonPropertyName("name")]
        public string? Name { get; set; }
    }

    private class UserItem
    {
        public int Index { get; set; }
        public string Id { get; set; } = string.Empty;
        public string Name { get; set; } = string.Empty;
    }
}