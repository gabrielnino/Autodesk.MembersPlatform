@page "/MembersList"
@using Application.Common.Pagination
@using Autodesk.Domain
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager Navigation

<div class="d-flex justify-content-between align-items-center mb-4">
    <h3 class="mb-0 section-title">People</h3>
    <div class="input-group search-group w-25">
        <input class="form-control search-input" placeholder="Search by name..." @bind="FilterName" @bind:event="oninput" />
        <button class="btn search-btn" @onclick="OnSearch">
            <i class="fas fa-search" aria-hidden="true"></i>
        </button>
    </div>
</div>

<div class="row g-4">
    @foreach (var u in Users)
    {
        <div class="col-12 col-sm-6 col-md-4 col-lg-3">
            <div class="card h-100 shadow-lg">
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title text-truncate">@u.Name @u.Lastname</h5>
                    <p class="card-text text-truncate">@u.Email</p>
                    <div class="mt-auto d-flex justify-content-end">
                        <button class="btn btn-edit" @onclick="() => Edit(u.Id)">
     
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M9 5H7C5.89543 5 5 5.89543 5 7V19C5 20.1046 5.89543 21 7 21H9M15 5H17C18.1046 5 19 5.89543 19 7V9" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                <path d="M14.902 20.3343L12.7153 20.7716L13.1526 18.585C13.1914 18.3914 13.2865 18.2136 13.4261 18.074L17.5 14L19.5 12L21.4869 13.9869L19.4869 15.9869L15.413 20.0608C15.2734 20.2004 15.0956 20.2956 14.902 20.3343Z" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                <path d="M9 5C9 3.89543 9.89543 3 11 3H13C14.1046 3 15 3.89543 15 5V7H9V5Z" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            </svg>
                            <span class="visually-hidden">Edit</span>
                        </button>

                        <button class="btn btn-delete" @onclick="() => Delete(u.Id)">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M10 12V17" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                <path d="M14 12V17" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                <path d="M4 7H20" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                <path d="M6 10V18C6 19.6569 7.34315 21 9 21H15C16.6569 21 18 19.6569 18 18V10" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                <path d="M9 5C9 3.89543 9.89543 3 11 3H13C14.1046 3 15 3.89543 15 5V7H9V5Z" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            </svg>
                            <span class="visually-hidden">Delete</span>
                        </button>

                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div class="text-center mt-4">
    <button class="btn load-more-btn px-5" @onclick="LoadMore" disabled="@Loading">
        @if (Loading)
        {
            <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
        }
        Load More
    </button>
</div>

@code {
    private List<User> Users { get; set; } = new();
    private string? NextCursor;
    private bool Loading;
    private string FilterName = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await ResetAndLoad();
    }

    private async Task OnSearch()
    {
        await ResetAndLoad();
    }

    private async Task ResetAndLoad()
    {
        Users.Clear();
        NextCursor = null;
        await LoadMore();
    }

    private async Task LoadMore()
    {
        Loading = true;
        var client = HttpClientFactory.CreateClient("AutodeskApi");
        var url = $"api/v1/users/cursor?name={Uri.EscapeDataString(FilterName)}&cursor={NextCursor}&pageSize=20";
        var page = await client.GetFromJsonAsync<PagedResult<User>>(url);
        if (page != null)
        {
            Users.AddRange(page.Items);
            NextCursor = page.NextCursor;
        }
        Loading = false;
    }

    private void Edit(string id)
    {
        Navigation.NavigateTo($"/UserForm/{id}");
    }

    private async Task Delete(string id)
    {
        Navigation.NavigateTo($"/Person/{id}/delete");
    }
}
